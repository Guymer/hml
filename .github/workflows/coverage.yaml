name: Coverage

on: [push]

jobs:
    build:
        name: Build and calculate coverage of Python module
        # if: startsWith(github.ref, 'refs/tags/')                                # Only calculate coverage on tag pushes.
        runs-on: ubuntu-24.04
        strategy:
            matrix:
                python-version: ["3.11", "3.12", "3.13"]
        steps:
            -
                name: Checkout project
                uses: actions/checkout@v4                                       # https://github.com/actions/checkout
                with:
                    path: main
                    submodules: true
            -
                name: Set up Python ${{ matrix.python-version }}
                uses: actions/setup-python@v5                                   # https://github.com/actions/setup-python
                with:
                    python-version: ${{ matrix.python-version }}
            -
                name: Install Python ${{ matrix.python-version }} dependencies
                run: |
                    python -m pip install --upgrade pip
                    pip install -r main/requirements.txt
                    pip install coverage
            -
                name: List programs
                run: |
                    echo "::notice $(which coverage)"
                    echo "::notice $(which gfortran)"
                    echo "::notice $(which gmake)"
                    echo "::notice $(which pip)"
                    echo "::notice $(which python)"
            -
                name: Analyse (and test) the Python ${{ matrix.python-version }} code
                # NOTE: Every function that is included in a "__init__.py" file
                #       will show at least one line as being covered. Whilst I
                #       accept that this is accurate it is not useful. See:
                #         * https://coverage.readthedocs.io/en/7.6.12/faq.html#q-why-are-my-function-definitions-marked-as-run-when-i-haven-t-tested-them
                run: |
                    cd main
                    gmake -r -C hml/f90 FC=`which gfortran` PYTHON3=`which python` compile
                    coverage run -m unittest unitTests.py
                    coverage html --directory=coverage-output --include="hml/*"
            -
                name: Upload coverage report (for future download)
                uses: actions/upload-artifact@v4                                # https://github.com/actions/upload-artifact
                with:
                    name: coverage-report (Python ${{ matrix.python-version }})
                    path: main/coverage-output
                    compression-level: 9
    publish-to-pages:
        # NOTE: Once it has been published then it will be available at:
        #         * https://guymer.github.io/hml
        name: Publish coverage report to GitHub Pages
        needs:
            - build
        runs-on: ubuntu-24.04
        environment:
            name: github-pages
            url: ${{ steps.deployment.outputs.page_url }}
        permissions:
            pages: write                                                        # Mandatory for deploying GitHub Pages.
            id-token: write                                                     # Mandatory for trusted publishing.
        steps:
            -
                name: Download a single coverage report
                uses: actions/download-artifact@v4                              # https://github.com/actions/download-artifact
                with:
                    name: coverage-report (Python 3.11)
            -
                name: Convert ZIP artifact to TAR.GZ web site
                run: |
                    pwd
                    ls -hl
                    unzip "coverage-report (Python 3.11).zip"
                    ls -hl
                    rm "coverage-report (Python 3.11).zip"
                    ls -hl
                    tar -cf github-pages.tar *.*
                    ls -hl
                    gzip -9f github-pages.tar
                    ls -hl
            -
                name: Setup Pages
                uses: actions/configure-pages@v5                                # https://github.com/actions/configure-pages
            -
                name: Deploy to GitHub Pages
                id: deployment
                uses: actions/deploy-pages@v4                                   # https://github.com/actions/deploy-pages
